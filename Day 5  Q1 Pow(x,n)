Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

 

Example 1:

Input: x = 2.00000, n = 10
Output: 1024.00000
Example 2:

Input: x = 2.10000, n = 3
Output: 9.26100

basic approach 

we can use the directly the formula x^n in the for loop but the TC will be O(N)

Best approach 

by using the binary exponential TC will be the TC O(lon n)

class Solution {
    public  static double myPow(double x, int n) {
        double ans = 1.0;
        long nn = n;

        if( nn < 0) nn = -1 * nn;

        while(nn > 0){
            if(nn % 2 == 1){
                ans = ans * x;
                nn = nn - 1;
            }
            else {
                x = x * x;
                nn = nn / 2;
            }
        }
        if(n < 0)ans = (double) (1.0)/ (double)(ans);
        return ans;
        
    }
}
